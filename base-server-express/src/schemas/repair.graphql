type Repair {
   id:ID,
   pk:String,
   type: String,
   operator: String,
   operatorDetail: User,
   repairDate: Int,
   repairAddress: String,
   repairPlace: String,
   repairPlaceDetail: Location,
   devicePK: String,
   deviceDetail: Device,
   customerPK: String,
   customerDetail: Customer,
   note: String,
   diagnose: String,
   dataStatus: String,
   status: String,
   timeCreated: String,
   timeModified: String,
   repairDetails: [RepairDetail]
}

input ModifyRepairDetail {
   errorContent: String,
   solution: String,
   price: Int
}

input InsertRepair {
   type: String!,
   operator: String!,
   repairDate: Int!,
   repairAddress: String,
   repairPlace: String,
   devicePK: String!,
   customerPK: String!,
   note: String,
   diagnose: String,
   dataStatus: String,
   repairDetails: [ModifyRepairDetail]!
}

input UpdateRepair {
   pk: String!,
   type: String!,
   operator: String!,
   repairDate: Int!,
   repairAddress: String,
   repairPlace: String,
   devicePK: String!,
   customerPK: String!,
   note: String,
   diagnose: String,
   dataStatus: String,
   status: String!,
   repairDetails: [ModifyRepairDetail]!
}



extend type Mutation {
   insertRepair(input: InsertRepair!): Repair,
   updateRepairByPK(input: UpdateRepair!): Repair,
   deleteRepairByPK(pk: String!): Boolean,
   updateStatusRepairByPK(pk: String!, status: String!): Boolean,
   assignOperatorRepairByPK(pk: String!,operator: String!): Boolean,
}

extend type Query {
   getAllRepair: [Repair],
   getByPKRepair(pk: String!): Repair,
   getByDataStatusRepair(dataStatus: String!): [Repair]
}